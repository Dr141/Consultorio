// <auto-generated />
using System;
using Consultorio.Infraestrutura.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Consultorio.Infraestrutura.Migrations
{
    [DbContext(typeof(ConsultorioContexto))]
    [Migration("20250401142539_ModeloIncial")]
    partial class ModeloIncial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("interval");

                    b.Property<int?>("IdConsulta")
                        .HasColumnType("integer");

                    b.Property<int?>("IdExame")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdAgenda")
                        .HasColumnType("integer");

                    b.Property<int>("IdMedico")
                        .HasColumnType("integer");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdAgenda")
                        .IsUnique();

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Exame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdAgenda")
                        .HasColumnType("integer");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("integer");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdAgenda")
                        .IsUnique();

                    b.HasIndex("IdPaciente");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.PrimitiveCollection<int[]>("Especialidades")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoa")
                        .IsUnique();

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoa")
                        .IsUnique();

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DtNasc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Agenda", b =>
                {
                    b.HasOne("Consultorio.Modelo.Entidades.Medico", "Medico")
                        .WithMany("Agendas")
                        .HasForeignKey("IdMedico");

                    b.HasOne("Consultorio.Modelo.Entidades.Paciente", "Paciente")
                        .WithMany("Agendas")
                        .HasForeignKey("IdPaciente");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Consulta", b =>
                {
                    b.HasOne("Consultorio.Modelo.Entidades.Agenda", "Agenda")
                        .WithOne("Consulta")
                        .HasForeignKey("Consultorio.Modelo.Entidades.Consulta", "IdAgenda");

                    b.HasOne("Consultorio.Modelo.Entidades.Medico", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultorio.Modelo.Entidades.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Exame", b =>
                {
                    b.HasOne("Consultorio.Modelo.Entidades.Agenda", "Agenda")
                        .WithOne("Exame")
                        .HasForeignKey("Consultorio.Modelo.Entidades.Exame", "IdAgenda");

                    b.HasOne("Consultorio.Modelo.Entidades.Paciente", "Paciente")
                        .WithMany("Exames")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Medico", b =>
                {
                    b.HasOne("Consultorio.Modelo.Entidades.Pessoa", "Pessoa")
                        .WithOne("Medico")
                        .HasForeignKey("Consultorio.Modelo.Entidades.Medico", "IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Paciente", b =>
                {
                    b.HasOne("Consultorio.Modelo.Entidades.Pessoa", "Pessoa")
                        .WithOne("Paciente")
                        .HasForeignKey("Consultorio.Modelo.Entidades.Paciente", "IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Agenda", b =>
                {
                    b.Navigation("Consulta");

                    b.Navigation("Exame");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Medico", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Paciente", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Consultas");

                    b.Navigation("Exames");
                });

            modelBuilder.Entity("Consultorio.Modelo.Entidades.Pessoa", b =>
                {
                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
